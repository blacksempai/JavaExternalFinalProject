/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2020-06-24 13:19:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class report_005fview_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta charset=\"UTF-8\">\n");
      out.write("        <title>Report</title>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        <div class=\"header\">\n");
      out.write("            ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/jsp/shared/header.jsp", out, false);
      out.write("\n");
      out.write("        </div>\n");
      out.write("        <div class=\"content\">\n");
      out.write("            ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/jsp/shared/report.jsp", out, false);
      out.write("\n");
      out.write("            <br>\n");
      out.write("            <p>* Подається з метою отримання довідки про доходи за інший період, ніж квартальний (річний) податковий (звітний) період.<br />** Зазначається номер календарного місяця, за який подається декларація з позначкою “Довідково”.<br /><sup>1</sup> Серію та номер паспорта зазначають фізичні особи, які мають відмітку у паспорті про право здійснювати будь-які платежі за серією та номером паспорта.<br /><sup>2</sup>&nbsp;Код та назва виду економічної діяльності зазначаються відповідно до Класифікатора видів економічної діяльності (КВЕД). <br /><sup>3</sup> Заповнюється наростаючим підсумком з початку року у гривнях з двома десятковими знаками після коми.<br /><sup>4</sup> Включається:<br />&nbsp;сума доходу, що перевищує обсяги, встановлені підпунктами 1, 2, 3 пункту 291.4 статті 291 глави 1 розділу XIV Податкового кодексу України, у звітному (податковому) періоді;<br />&nbsp;сума доходу, отриманого від провадження діяльності, не зазначеної в реєстрі платників єдиного податку (для першої або другої групи), у звітному (податковому) періоді;<br />&nbsp;сума доходу, отриманого при застосуванні іншого способу розрахунків, ніж передбачено пунктом 291.6 статті 291 глави 1 розділу XIV Податкового кодексу України, у звітному (податковому) періоді;<br />&nbsp;сума доходу, отриманого від здійснення видів діяльності, які не дають права на застосування спрощеної системи оподаткування, у звітному (податковому) періоді;<br />&nbsp;сума доходу, отриманого платниками першої або другої групи від провадження діяльності, яка не передбачена в підпункті 1 або 2 пункту 291.4 статті 291 Кодексу.<br /><sup>5</sup> Заповнюється наростаючим підсумком з початку року (не заповнюється платником податку, що подає декларацію „Довідково”).<br /><sup>6</sup> Заповнюється платником податку, який уточнює податкові зобов’язання (не заповнюється платником податку, що подає декларацію «Довідково»). Для уточнення звітних періодів, що передували періоду запровадження нової форми декларації, у рядку 15 зазначається сума єдиного податку, яка підлягала перерахуванню до бюджету, за даними звітного (податкового) періоду, в якому виявлена помилка (рядок 29 податкової декларації, затвердженої наказом Міністерства фінансів України від 21 грудня 2011 року № 1688 «Про затвердження форм податкових декларацій платника єдиного податку», зареєстрованим у Міністерстві юстиції України 27 грудня 2011 року за № 1533/20271 (у редакції наказу Міністерства фінансів України від 07 листопада 2012 року № 1159)).<br /><sup>7</sup> Зазначається тільки як позитивне значення.<br /><sup>8</sup> Нараховується платником у разі самостійного виявлення факту заниження податкового зобов’язання (пункт 50.1 статті 50 глави 2 розділу ІІ Податкового кодексу України).</p>\n");
      out.write("        </div>\n");
      out.write("    </body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
